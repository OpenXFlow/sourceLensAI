[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sourcelens" # This remains the main package name
version = "0.2.0" # INCREMENTED VERSION due to significant refactoring
description = "AI-powered tool to generate tutorials from source code or web content." # Updated description
readme = "README.md"
authors = [
  { name = "Jozef Darida", email = "darijo2@yahoo.com" },
]
license = {text = "GPL-3.0-or-later"}
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
dependencies = [
    "PyYAML>=6.0",
    "attrs>=21.3.0", # Used in dataclasses, flow engine
    "typing-extensions>=4.0.0",
    "jsonschema>=4.0.1", # For ConfigLoader
    "python-dotenv>=1.0.0", # For ConfigLoader to load .env files
    "requests>=2.28.0", # Used by ConfigLoader (potentially) and utils._cloud_llm_api, FetchWebPage
    # Core LLM libraries that are common or default
    # Consider moving to extras if more granularity is desired
    "google-generativeai>=0.8.0", # Example, if Gemini is a common/default provider
    "google-cloud-aiplatform>=1.25.0", # If VertexAI is a supported option
    # "openai>=1.0.0", # Example: if OpenAI is supported
    # "anthropic>=0.20.0", # Example: if Anthropic is supported
]

[project.urls]
Homepage = "https://github.com/OpenXFlow/sourceLensAI" # Updated repo name
Repository = "https://github.com/OpenXFlow/sourceLensAI"

[project.scripts]
sourcelens = "sourcelens.main:main"
# Optionally, add scripts for standalone flows:
# sourcelens-code = "FL01_code_analysis.cli:run_standalone_code_analysis"
# sourcelens-web = "FL02_web_crawling.cli:run_standalone_web_crawling"

[project.optional-dependencies]
code_analysis = [
    "GitPython>=3.1.0",
    # Add other libraries specific to code analysis here if needed (e.g., for other AST parsers)
]
web_crawling = [
    "crawl4ai>=0.6.3", # Main dependency for web crawling
    # crawl4ai should pull in playwright, beautifulsoup4 etc. as its transitive dependencies
]
# Example for specific LLM provider SDKs if we want to make them optional:
# openai_llm = ["openai>=1.0.0"]
# anthropic_llm = ["anthropic>=0.20.0"]
# perplexity_llm = ["requests>=2.28.0"] # requests is already in core, just an example

all = [ # To install sourcelens with all optional flow functionalities
    "sourcelens[code_analysis]",
    "sourcelens[web_crawling]",
    # "sourcelens[openai_llm]", # Example of including optional LLM SDK
    # "sourcelens[anthropic_llm]", # Example
]
dev = [
    "pytest>=7.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "build>=0.10.0",
    "types-PyYAML", # Moved from main dependencies, primarily for dev type checking
    "types-requests", # Moved from main dependencies
    "types-jsonschema", # Moved from main dependencies
]

[tool.setuptools.packages.find]
where = ["src"]
# If auto-discovery fails, we might need to explicitly include:
# include = ["sourcelens*", "FL01_code_analysis*", "FL02_web_crawling*"]
# The "*" helps include sub-packages like sourcelens.core, FL01_code_analysis.nodes etc.

[tool.ruff]
# ... (existing Ruff settings) ...
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "E", "W", "F", "I", "C414", "B904", "BLE001",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    "D200", "D211", "D210", "D212",
    "D400", "D401", "D402", "D403", "D415",
    "ANN001", "ANN002", "ANN003", "ANN201", "ANN202", "ANN204", "ANN205", "ANN206",
    "UP006", "UP007",
    "TC001", "TC002",
    "C901", "PLR0912", "PLR0915", "PLW0603", "PLR2004", "PLE1206",
    "RET504", "PTH", "FBT001", "FBT002", "PGH003", "SIM105", "F821", "F841", "RUF100"
]
ignore = [
    "D203", "D213", "ANN101", "ANN102", "ANN401", "S101",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
# Tell Mypy where to find packages
package_path = "src"
# Explicitly list top-level packages to be checked
packages = ["sourcelens", "FL01_code_analysis", "FL02_web_crawling"]
# For third-party libraries without stubs:
# [[tool.mypy.overrides]]
# module = [
#    "git.*", # Example for GitPython if it lacks stubs or has partial typing
#    "crawl4ai.*" # Example for crawl4ai
# ]
# ignore_missing_imports = true

# End of pyproject.toml